from pathlib import Path
import os

# Base du projet
BASE_DIR = Path(__file__).resolve().parent.parent

# üö® S√©curit√© üö®
SECRET_KEY = 'cestlamagieheinmonfrere'
DEBUG = False  # D√©sactiv√© en production

ALLOWED_HOSTS = ["devoirdjango.up.railway.app", "localhost"]

CSRF_TRUSTED_ORIGINS = [
    "https://devoirdjango.up.railway.app",
]

# üì¶ Applications
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'commandes',
]

# ‚öôÔ∏è Middleware
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Am√©lioration des fichiers statiques
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# üîó Configuration URL
ROOT_URLCONF = 'restaurant.urls'

# üñºÔ∏è Templates
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'debug': DEBUG,  # D√©sactivation du d√©bogage des templates en production
        },
    },
]

# üöÄ WSGI
WSGI_APPLICATION = 'restaurant.wsgi.application'

# üóÑÔ∏è Base de donn√©es (SQLite3)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# üîë Validation des mots de passe
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# üåç Localisation
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# üìÇ Gestion des fichiers statiques et m√©dias
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'  # Obligatoire pour `collectstatic` en production
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# üîí S√©curit√© HTTP
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_SSL_REDIRECT = True  # Force l'utilisation de HTTPS
SESSION_COOKIE_SECURE = True  # S√©curise les cookies
CSRF_COOKIE_SECURE = True
X_FRAME_OPTIONS = 'DENY'  # Emp√™che l'int√©gration en iframe
SECURE_HSTS_SECONDS = 31536000  # Active HSTS pour un an
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True

# üìå Cl√© par d√©faut pour les mod√®les
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
